Variable,var
Integer,int
Identifier,thala
Assign,=
Number,7
Semicolon,;
If,if
LPar,(
True,true
RPar,)
LBrace,{
Variable,var
String_k,string
Identifier,thala
Assign,=
String,far
Semicolon,;
RBrace,}
If,if
LPar,(
True,true
RPar,)
LBrace,{
Variable,var
String_k,string
Identifier,thala
Assign,=
String,far
Semicolon,;
Function,func
Identifier,header
LPar,(
Array,arr
Integer,int
Identifier,sample_arr
RPar,)
Colon,:
Integer,int
LBrace,{
If,if
LPar,(
Length,len
LPar,(
Identifier,sample_arr
RPar,)
Greater,>
Number,0
RPar,)
LBrace,{
Return,return
Identifier,sample_arr
LSQB,[
Number,0
RSQB,]
Semicolon,;
RBrace,}
Else,else
LBrace,{
Return,return
Number,0
Semicolon,;
RBrace,}
RBrace,}
RBrace,}
Variable,var
String_k,string
Identifier,aadi
Assign,=
String,
Semicolon,;
Variable,var
Char_k,char
Identifier,c
Assign,=
Char,c
Semicolon,;
For,for
LPar,(
Variable,var
Integer,int
Identifier,thala
Assign,=
Number,7
Semicolon,;
Identifier,thala
Greater,>
Number,0
Semicolon,;
Identifier,thala
Decrement,--
RPar,)
LBrace,{
Print,print
Colon,:
Identifier,aadi
Semicolon,;
RBrace,}
Function,func
Main,main
LPar,(
RPar,)
Colon,:
Void,void
LBrace,{
Return,return
Semicolon,;
RBrace,}
EOF,
