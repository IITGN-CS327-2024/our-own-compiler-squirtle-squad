Variable,var
Integer,int
Identifier,a
Assign,=
Number,5
Mod,%
Number,2
Semicolon,;
Variable,var
Integer,int
Identifier,b
Assign,=
Number,7
Semicolon,;
Identifier,b
Assign,=
Number,8
Semicolon,;
Number,1
Plus,+
Number,2
Star,*
Identifier,a
Slash,/
Identifier,b
Semicolon,;
If,if
LPar,(
Identifier,a
Plus,+
Number,3
Less,<
Identifier,b
RPar,)
LBrace,{
Identifier,a
Assign,=
Number,6
Semicolon,;
RBrace,}
Else,else
LBrace,{
Identifier,a
Assign,=
Number,7
Semicolon,;
RBrace,}
While,while
LPar,(
Identifier,a
Less,<
Number,7
RPar,)
LBrace,{
Identifier,a
Increment,++
Semicolon,;
RBrace,}
Function,func
Identifier,something
LPar,(
Integer,int
Identifier,a
Comma,,
Integer,int
Identifier,b
RPar,)
Colon,:
Integer,int
LBrace,{
Return,return
Identifier,a
Plus,+
Identifier,b
Semicolon,;
RBrace,}
Identifier,something
LPar,(
Identifier,a
Comma,,
Identifier,b
RPar,)
Semicolon,;
EOF,
