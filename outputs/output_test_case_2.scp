Function,func
Identifier,looper
LeftParen,(
Integer,int
Identifier,n_iteration
Comma,,
String_k,string
Identifier,message
RightParen,)
Colon,:
Boolean,bool
LeftBrace,{
Variable,var
Integer,int
Identifier,iter
Assign,=
Number,1
Semicolon,;
While,while
LeftParen,(
Identifier,iter
Less,<
Identifier,n_iteration
RightParen,)
LeftBrace,{
Print,print
Colon,:
Identifier,message
Semicolon,;
Identifier,iter
Increment,++
Semicolon,;
RightBrace,}
Return,return
True,true
Semicolon,;
RightBrace,}
Function,func
Main,main
LeftParen,(
RightParen,)
Colon,:
Integer,int
LeftBrace,{
Constant,const
String_k,string
Identifier,text
Assign,=
String,Calling all Autobots
Semicolon,;
Constant,const
Integer,int
Identifier,no_iteration
Assign,=
Number,6
Semicolon,;
Variable,var
Boolean,bool
Identifier,output
Assign,=
Identifier,looper
LeftParen,(
Identifier,no_iteration
Comma,,
Identifier,text
RightParen,)
Semicolon,;
If,if
LeftParen,(
Identifier,output
Equal,==
False,false
RightParen,)
LeftBrace,{
Print,print
Colon,:
String,Loop Failed
Semicolon,;
RightBrace,}
ElseIf,elseif
LeftParen,(
Identifier,output
Equal,==
True,true
RightParen,)
LeftBrace,{
Print,print
Colon,:
String,Function Works!
Semicolon,;
RightBrace,}
Else,else
LeftBrace,{
Print,print
Colon,:
String,Function Failed
Semicolon,;
RightBrace,}
RightBrace,}
EOF,
