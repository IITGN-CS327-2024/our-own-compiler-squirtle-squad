Function,func
Identifier,looper
LPar,(
Integer,int
Identifier,n_iteration
Comma,,
String_k,string
Identifier,message
RPar,)
Colon,:
Boolean,bool
LBrace,{
Variable,var
Integer,int
Identifier,iter
Assign,=
Number,1
Semicolon,;
While,while
LPar,(
Identifier,iter
Less,<
Identifier,n_iteration
RPar,)
LBrace,{
Print,print
Colon,:
Identifier,message
Semicolon,;
Identifier,iter
Increment,++
Semicolon,;
RBrace,}
Return,return
True,true
Semicolon,;
RBrace,}
Function,func
Main,main
LPar,(
RPar,)
Colon,:
Integer,int
LBrace,{
Constant,const
String_k,string
Identifier,text
Assign,=
String,Calling all Autobots
Semicolon,;
Constant,const
Integer,int
Identifier,no_iteration
Assign,=
Number,6
Semicolon,;
Variable,var
Boolean,bool
Identifier,output
Assign,=
Identifier,looper
LPar,(
Identifier,no_iteration
Comma,,
Identifier,text
RPar,)
Semicolon,;
If,if
LPar,(
Identifier,output
Equal,==
False,false
RPar,)
LBrace,{
Print,print
Colon,:
String,Loop Failed
Semicolon,;
RBrace,}
Else,else
LBrace,{
Print,print
Colon,:
String,Function Failed
Semicolon,;
RBrace,}
RBrace,}
EOF,
