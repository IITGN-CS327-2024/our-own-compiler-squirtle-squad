Function,func
Identifier,header
LeftParen,(
Array,arr
Integer,int
Identifier,sample_arr
RightParen,)
Colon,:
Integer,int
LeftBrace,{
If,if
LeftParen,(
LeftParen,(
Length,len
LeftParen,(
Identifier,sample_arr
RightParen,)
RightParen,)
Greater,>
Number,0
RightParen,)
LeftBrace,{
Return,return
Identifier,sample_arr
LeftBracket,[
Number,0
RightBracket,]
Semicolon,;
RightBrace,}
Else,else
LeftBrace,{
Return,return
Null,null
Semicolon,;
RightBrace,}
RightBrace,}
Function,func
Identifier,subarr
LeftParen,(
Array,arr
Integer,int
Identifier,sample_arr
Comma,,
Integer,int
Identifier,start_index
Comma,,
Integer,int
Identifier,sub_arr_size
RightParen,)
Colon,:
Array,arr
Integer,int
LeftBrace,{
Array,arr
Integer,int
Identifier,sub_Arr
Colon,:
Identifier,sub_arr_size
Semicolon,;
Function,func
Identifier,fill
LeftParen,(
Integer,int
Identifier,index
RightParen,)
Colon,:
Void,void
LeftBrace,{
Identifier,sub_Arr
Assign,=
Identifier,sample_arr
LeftBracket,[
Identifier,index
Plus,+
Identifier,start_index
RightBracket,]
Semicolon,;
RightBrace,}
Variable,var
Integer,int
Identifier,i
Assign,=
Number,0
Semicolon,;
While,while
LeftParen,(
Identifier,i
Less,<
Identifier,sub_arr_size
RightParen,)
LeftBrace,{
Identifier,fill
LeftParen,(
Identifier,i
RightParen,)
Semicolon,;
Identifier,i
Increment,++
Semicolon,;
RightBrace,}
RightBrace,}
Function,func
Identifier,substring
LeftParen,(
String_k,string
Identifier,s
RightParen,)
Colon,:
Function,func
LeftParen,(
Integer,int
Comma,,
Integer,int
RightParen,)
Colon,:
String_k,string
LeftBrace,{
Return,return
Function,func
Identifier,slicing
LeftParen,(
Integer,int
Identifier,start_index
Comma,,
Integer,int
Identifier,sub_str_size
RightParen,)
Colon,:
String_k,string
LeftBrace,{
Return,return
Substr,substr
LeftParen,(
Identifier,s
Comma,,
Identifier,start_index
Comma,,
Identifier,start_index
Plus,+
Identifier,sub_str_size
RightParen,)
Semicolon,;
RightBrace,}
RightBrace,}
Function,func
Main,main
LeftParen,(
RightParen,)
Colon,:
Void,void
LeftBrace,{
TYPE,type
Identifier,MyFunc
Assign,=
Function,func
LeftParen,(
Integer,int
Comma,,
Integer,int
RightParen,)
Colon,:
String_k,string
Semicolon,;
Identifier,MyFunc
Identifier,x
Assign,=
Identifier,substring
LeftParen,(
String,abcdef
RightParen,)
Semicolon,;
Variable,var
String_k,string
Identifier,sub
Assign,=
Identifier,x
LeftParen,(
Number,1
Comma,,
Number,3
RightParen,)
Semicolon,;
RightBrace,}
EOF,
